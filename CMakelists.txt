cmake_minimum_required(VERSION 3.10)

# set the project name
project(ObjectCollision)

set(CMAKE_CXX_COMPILER g++)
# set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)

## If you want to link SFML statically
# set(SFML_STATIC_LIBRARIES TRUE)

# Enable debug symbols by default
# if(NOT CMAKE_BUILD_TYPE)
#   set(CMAKE_BUILD_TYPE Debug 
#     CACHE STRING 
#       "Choose the type of build (Debug or Release)" FORCE)
# endif()

# Export compile commands for completion engines (optional)
# set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Set option to control setting the resource path variable
# option(USE_INSTALL_RESOURCE_PATH "Set resource path to install location" OFF)

# if(NOT USE_INSTALL_RESOURCE_PATH)
#   set(RESOURCE_PATH "${PROJECT_SOURCE_DIR}/content/")
# else()
#   set(RESOURCE_PATH "${CMAKE_INSTALL_PREFIX}/share/${CMAKE_PROJECT_NAME}/content/")
# endif()

# Generate config.h
configure_file(include/config.h.in config.h)

list(APPEND CMAKE_MODULE_PATH "/usr/share/SFML/cmake/Modules")

# Find SFML shared libraries
find_package(SFML # 2.4
    COMPONENTS 
        system window graphics REQUIRED
    )

# include_directories("${PROJECT_BINARY_DIR}")

# include_directories(
#         "${PROJECT_SOURCE_DIR}/include"
#         "${PROJECT_SOURCE_DIR}/src"
# )

file(GLOB all_SRCS
        "${PROJECT_SOURCE_DIR}/include/*.h"
        # "${PROJECT_SOURCE_DIR}/include/*.hpp"
        "${PROJECT_SOURCE_DIR}/src/*.cpp"
        # "${PROJECT_SOURCE_DIR}/src/*.c"
        )

add_executable(ObjectCollision "${all_SRCS}")

# Set include directory search paths
target_include_directories(ObjectCollision 
  PRIVATE
    "${PROJECT_BINARY_DIR}"
    "${CMAKE_CURRENT_SOURCE_DIR}/include"
  )

# Set executable RPATH
# set_target_properties(ObjectCollision
#   PROPERTIES
#       INSTALL_RPATH
#         "${CMAKE_INSTALL_PREFIX}/lib"
#   )

# Link executable to required SFML modules
target_link_libraries(ObjectCollision sfml-system sfml-graphics sfml-window)

# Set executable install location
# install(TARGETS ObjectCollision DESTINATION bin)

# # Set install location for resources
# install(DIRECTORY content
#   DESTINATION "${CMAKE_INSTALL_PREFIX}/share/${CMAKE_PROJECT_NAME}"
# )